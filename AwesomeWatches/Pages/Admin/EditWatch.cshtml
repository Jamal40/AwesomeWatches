@page "{id:int?}"
@model AwesomeWatches.Pages.Admin.EditWatchModel
@{
    ViewData["Title"] = $"Edit Watch {Model.WatchToEdit.Name}";
}

<form class="container add-form" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="input-field col s12">
            <input asp-for="WatchToEdit.Name" class="validate inp">
            <label asp-for="WatchToEdit.Name" class="lime-text text-darken-2"></label>
            <span asp-validation-for="WatchToEdit.Name" class="helper-text #e53935 red-text text-darken-1"></span>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s12">
            <input asp-for="WatchToEdit.Price" class="validate inp">
            <label asp-for="WatchToEdit.Price" class="lime-text text-darken-2"></label>
            <span asp-validation-for="WatchToEdit.Price" class="helper-text #e53935 red-text text-darken-1"></span>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s12">
            <input asp-for="WatchToEdit.QuantityInStock" class="validate inp">
            <label asp-for="WatchToEdit.QuantityInStock" class="lime-text text-darken-2"></label>
            <span asp-validation-for="WatchToEdit.QuantityInStock" class="helper-text #e53935 red-text text-darken-1"></span>
        </div>
    </div>
    <div class="file-field input-field">
        <div class="btn">
            <span>Watch Image</span>
            <input asp-for="WatchToEdit.Picture" value="@Model.GetImageLocation()" type="file">
        </div>
        <div class="file-path-wrapper">
            <input asp-for="WatchToEdit.Picture" value="@Model.GetImageLocation()"
            class="file-path validate" type="text" placeholder="Upload the image.">
        </div>
    </div>
    <div class="row">
        <div class="input-field col s12">
            <textarea asp-for="WatchToEdit.Description" class="materialize-textarea inp"></textarea>
            <label asp-for="WatchToEdit.Description" class="lime-text text-darken-2"></label>
        </div>
    </div>

    <div class="edit-watch-categories-container">
        @foreach (var category in @Model.Categories)
        {
            <p>
                <label>
                    @if (Model.SelectedCategories.Select(c=>c.Id).Contains(category.Id)){
                    <input value="@category.Id" type="checkbox" checked />
                    }
                    else {
                    <input value="@category.Id" type="checkbox"/>
                    }
                    <span>@category.Name</span>
                </label>
            </p>
        }
    </div>

    <input class="edit-watch-categories" type="hidden" asp-for="WatchToEdit.CategoriesString" class="validate inp">


    <div class="row btn-container">
        <button onclick="submitAddedWatch()" class="lime darken-2 waves-effect waves-light btn-large">Add</button>
    </div>
</form>

@section Scripts
{
<script>
    const categoriesCheckboxes =
        document.querySelectorAll(".edit-watch-categories-container input");

    const selectedCategories = new Map();

    for (let i = 0; i < categoriesCheckboxes.length; i++) {
        categoriesCheckboxes[i].addEventListener("change", (e) => {
            const boxValue = e.target.value;
            if (e.target.checked) {
                selectedCategories.set(boxValue, boxValue);
            }

            if (!e.target.checked) {
                selectedCategories.delete(boxValue);
            }
            console.log(selectedCategories);
        })
    }
    let alreadySelectedCategoriesString = '@Model.WatchToEdit.CategoriesString';
    let alreadySelectedCategories = alreadySelectedCategoriesString.split(",");

    for(let cat of alreadySelectedCategories){
        selectedCategories.set(cat, cat);
    }

    console.log(alreadySelectedCategoriesString);
    submitAddedWatch = () => {
        document.querySelector(".edit-watch-categories").value = Array.from(selectedCategories.values()).join(",");
    }
</script>
}